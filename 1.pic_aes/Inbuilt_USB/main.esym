T G "div_t" 1 33 "{sint8 quot,sint8 rem}"
D G "__PCH__" 1 35 ""4.114""
D G "__DEVICE__" 1 35 ""
D G "__DATE__" 1 35 ""26-Dec-15""
D G "__TIME__" 1 35 ""15:08:10"" "The A to Z of Building a Testbed for Power Analysis Attacks"
C G "" 0 25 2 "*"
d G "PIN_A0" 1 27 "31744"
d G "PIN_A1" 1 28 "31745"
d G "PIN_A2" 1 29 "31746"
d G "PIN_A3" 1 30 "31747"
d G "PIN_A4" 1 31 "31748"
d G "PIN_A5" 1 32 "31749"
d G "PIN_A6" 1 33 "31750"
d G "PIN_B0" 1 35 "31752"
d G "PIN_B1" 1 36 "31753"
d G "PIN_B2" 1 37 "31754"
d G "PIN_B3" 1 38 "31755"
d G "PIN_B4" 1 39 "31756"
d G "PIN_B5" 1 40 "31757"
d G "PIN_B6" 1 41 "31758"
d G "PIN_B7" 1 42 "31759"
d G "PIN_C0" 1 44 "31760"
d G "PIN_C1" 1 45 "31761"
d G "PIN_C2" 1 46 "31762"
d G "PIN_C4" 1 47 "31764"
d G "PIN_C5" 1 48 "31765"
d G "PIN_C6" 1 49 "31766"
d G "PIN_C7" 1 50 "31767"
d G "PIN_E3" 1 52 "31779"
d G "FALSE" 1 55 "0"
d G "TRUE" 1 56 "1"
d G "BYTE" 1 58 "int8"
d G "BOOLEAN" 1 59 "int1"
d G "getc" 1 61 "getch"
d G "fgetc" 1 62 "getch"
d G "getchar" 1 63 "getch"
d G "putc" 1 64 "putchar"
d G "fputc" 1 65 "putchar"
d G "fgets" 1 66 "gets"
d G "fputs" 1 67 "puts"
d G "WDT_TIMEOUT" 1 73 "7"
d G "MCLR_FROM_SLEEP" 1 74 "11"
d G "MCLR_FROM_RUN" 1 75 "15"
d G "NORMAL_POWER_UP" 1 76 "12"
d G "BROWNOUT_RESTART" 1 77 "14"
d G "WDT_FROM_SLEEP" 1 78 "3"
d G "RESET_INSTRUCTION" 1 79 "0"
d G "SLEEP_FULL" 1 83 "0" "Default"
d G "SLEEP_IDLE" 1 84 "1" "Clock and peripherals don't stop"
d G "T0_INTERNAL" 1 92 "0"
d G "T0_EXT_L_TO_H" 1 93 "32"
d G "T0_EXT_H_TO_L" 1 94 "48"
d G "T0_DIV_1" 1 96 "8"
d G "T0_DIV_2" 1 97 "0"
d G "T0_DIV_4" 1 98 "1"
d G "T0_DIV_8" 1 99 "2"
d G "T0_DIV_16" 1 100 "3"
d G "T0_DIV_32" 1 101 "4"
d G "T0_DIV_64" 1 102 "5"
d G "T0_DIV_128" 1 103 "6"
d G "T0_DIV_256" 1 104 "7"
d G "T0_OFF" 1 106 "0x80"
d G "T0_8_BIT" 1 108 "0x40"
d G "RTCC_INTERNAL" 1 110 "0" "The following are provided for compatibility"
d G "RTCC_EXT_L_TO_H" 1 111 "32" "with older compiler versions"
d G "RTCC_EXT_H_TO_L" 1 112 "48"
d G "RTCC_DIV_1" 1 113 "8"
d G "RTCC_DIV_2" 1 114 "0"
d G "RTCC_DIV_4" 1 115 "1"
d G "RTCC_DIV_8" 1 116 "2"
d G "RTCC_DIV_16" 1 117 "3"
d G "RTCC_DIV_32" 1 118 "4"
d G "RTCC_DIV_64" 1 119 "5"
d G "RTCC_DIV_128" 1 120 "6"
d G "RTCC_DIV_256" 1 121 "7"
d G "RTCC_OFF" 1 122 "0x80"
d G "RTCC_8_BIT" 1 123 "0x40"
d G "WDT_ON" 1 134 "0x100"
d G "WDT_OFF" 1 135 "0"
d G "T1_DISABLED" 1 141 "0"
d G "T1_INTERNAL" 1 142 "0x85"
d G "T1_EXTERNAL" 1 143 "0x87"
d G "T1_EXTERNAL_SYNC" 1 144 "0x83"
d G "T1_CLK_OUT" 1 146 "8"
d G "T1_DIV_BY_1" 1 148 "0"
d G "T1_DIV_BY_2" 1 149 "0x10"
d G "T1_DIV_BY_4" 1 150 "0x20"
d G "T1_DIV_BY_8" 1 151 "0x30"
d G "T2_DISABLED" 1 156 "0"
d G "T2_DIV_BY_1" 1 157 "4"
d G "T2_DIV_BY_4" 1 158 "5"
d G "T2_DIV_BY_16" 1 159 "6"
d G "T3_DISABLED" 1 165 "0"
d G "T3_INTERNAL" 1 166 "0x85"
d G "T3_EXTERNAL" 1 167 "0x87"
d G "T3_EXTERNAL_SYNC" 1 168 "0x83"
d G "T3_DIV_BY_1" 1 170 "0"
d G "T3_DIV_BY_2" 1 171 "0x10"
d G "T3_DIV_BY_4" 1 172 "0x20"
d G "T3_DIV_BY_8" 1 173 "0x30"
d G "CCP_OFF" 1 179 "0"
d G "CCP_CAPTURE_FE" 1 180 "4"
d G "CCP_CAPTURE_RE" 1 181 "5"
d G "CCP_CAPTURE_DIV_4" 1 182 "6"
d G "CCP_CAPTURE_DIV_16" 1 183 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 1 184 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 185 "9"
d G "CCP_COMPARE_INT" 1 186 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 1 187 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 1 188 "0xB"
d G "CCP_PWM" 1 189 "0xC"
d G "CCP_PWM_PLUS_1" 1 190 "0x1c"
d G "CCP_PWM_PLUS_2" 1 191 "0x2c"
d G "CCP_PWM_PLUS_3" 1 192 "0x3c"
d G "T3_CCP1_TO_2" 1 198 "0x48"
d G "T3_CCP2" 1 199 "0x8"
d G "SPI_MASTER" 1 207 "0x20"
d G "SPI_SLAVE" 1 208 "0x24"
d G "SPI_SCK_IDLE_HIGH" 1 209 "0x10"
d G "SPI_SCK_IDLE_LOW" 1 210 "0x00"
d G "SPI_CLK_DIV_4" 1 211 "0x00"
d G "SPI_CLK_DIV_16" 1 212 "0x01"
d G "SPI_CLK_DIV_64" 1 213 "0x02"
d G "SPI_CLK_T2" 1 214 "0x03"
d G "SPI_SS_DISABLED" 1 215 "0x01"
d G "SPI_XMIT_L_TO_H" 1 217 "0x4000"
d G "SPI_XMIT_H_TO_L" 1 218 "0x0000"
d G "SPI_SAMPLE_AT_MIDDLE" 1 220 "0x0000"
d G "SPI_SAMPLE_AT_END" 1 221 "0x8000"
d G "SPI_L_TO_H" 1 224 "SPI_SCK_IDLE_LOW"
d G "SPI_H_TO_L" 1 225 "SPI_SCK_IDLE_HIGH"
d G "UART_ADDRESS" 1 231 "2"
d G "UART_DATA" 1 232 "4"
d G "UART_AUTODETECT" 1 233 "8"
d G "UART_AUTODETECT_NOWAIT" 1 234 "9"
d G "UART_WAKEUP_ON_RDA" 1 235 "10"
d G "UART_SEND_BREAK" 1 236 "13"
d G "A0_A3_A1_A3" 1 240 "0xfff04"
d G "A0_A3_A1_A2_OUT_ON_A4_A5" 1 241 "0xfcf03"
d G "A0_A3_A1_A3_OUT_ON_A4_A5" 1 242 "0xbcf05"
d G "NC_NC_NC_NC" 1 243 "0x0ff07"
d G "A0_A3_A1_A2" 1 244 "0xfff02"
d G "A0_A3_NC_NC_OUT_ON_A4" 1 245 "0x9ef01"
d G "A0_VR_A1_VR" 1 246 "0x3ff06"
d G "A3_VR_A2_VR" 1 247 "0xcff0e"
d G "CP1_INVERT" 1 248 "0x0000010"
d G "CP2_INVERT" 1 249 "0x0000020"
d G "VREF_LOW" 1 257 "0xa0"
d G "VREF_HIGH" 1 258 "0x80"
d G "VREF_F5" 1 260 "0x40"
d G "VREF_COMP" 1 261 "0x10"
d G "LVD_LVDIN" 1 266 "0x1F"
d G "LVD_45" 1 267 "0x1E"
d G "LVD_42" 1 268 "0x1D"
d G "LVD_40" 1 269 "0x1C"
d G "LVD_38" 1 270 "0x1B"
d G "LVD_36" 1 271 "0x1A"
d G "LVD_35" 1 272 "0x19"
d G "LVD_33" 1 273 "0x18"
d G "LVD_30" 1 274 "0x17"
d G "LVD_28" 1 275 "0x16"
d G "LVD_27" 1 276 "0x15"
d G "LVD_25" 1 277 "0x14"
d G "LVD_24" 1 278 "0x13"
d G "LVD_23" 1 279 "0x12"
d G "LVD_22" 1 280 "0x11"
d G "LVD_21" 1 281 "0x10"
d G "LVD_TRIGGER_BELOW" 1 283 "0"
d G "LVD_TRIGGER_ABOVE" 1 284 "0x80"
d G "OSC_31KHZ" 1 290 "0"
d G "OSC_125KHZ" 1 291 "0x10"
d G "OSC_250KHZ" 1 292 "0x20"
d G "OSC_500KHZ" 1 293 "0x30"
d G "OSC_1MHZ" 1 294 "0x40"
d G "OSC_2MHZ" 1 295 "0x50"
d G "OSC_4MHZ" 1 296 "0x60"
d G "OSC_8MHZ" 1 297 "0x70"
d G "OSC_16MHZ" 1 298 "0x4060"
d G "OSC_32MHZ" 1 299 "0x4070"
d G "OSC_TIMER1" 1 301 "1"
d G "OSC_INTRC" 1 302 "2"
d G "OSC_NORMAL" 1 303 "0"
d G "OSC_IDLE_MODE" 1 305 "0x80"
d G "OSC_31250" 1 306 "0x8000"
d G "OSC_PLL_ON" 1 307 "0x4000"
d G "OSC_PLL_OFF" 1 308 "0"
d G "OSC_STATE_STABLE" 1 312 "4"
d G "OSC_STATE_EXT_RUNNING" 1 313 "8"
d G "ADC_OFF" 1 320 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 1 321 "0x100"
d G "ADC_CLOCK_DIV_4" 1 322 "0x04"
d G "ADC_CLOCK_DIV_8" 1 323 "0x01"
d G "ADC_CLOCK_DIV_16" 1 324 "0x05"
d G "ADC_CLOCK_DIV_32" 1 325 "0x02"
d G "ADC_CLOCK_DIV_64" 1 326 "0x06"
d G "ADC_CLOCK_INTERNAL" 1 327 "0x07" "Internal 2-6us"
d G "NO_ANALOGS" 1 331 "0x0F" "None"
d G "ALL_ANALOG" 1 332 "0x00" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 B4 B0"
d G "AN0_TO_AN11" 1 333 "0x03" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 B4"
d G "AN0_TO_AN10" 1 334 "0x04" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1"
d G "AN0_TO_AN9" 1 335 "0x05" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3"
d G "AN0_TO_AN8" 1 336 "0x06" "A0 A1 A2 A3 A5 E0 E1 E2 B2"
d G "AN0_TO_AN7" 1 337 "0x07" "A0 A1 A2 A3 A5 E0 E1 E2"
d G "AN0_TO_AN6" 1 338 "0x08" "A0 A1 A2 A3 A5 E0 E1"
d G "AN0_TO_AN5" 1 339 "0x09" "A0 A1 A2 A3 A5 E0"
d G "AN0_TO_AN4" 1 340 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 1 341 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 1 342 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 1 343 "0x0D" "A0 A1"
d G "AN0" 1 344 "0x0E" "A0"
d G "AN0_TO_AN11_ANALOG" 1 345 "0x03" "!old only provided for compatibility"
d G "AN0_TO_AN10_ANALOG" 1 346 "0x04" "!old only provided for compatibility"
d G "AN0_TO_AN9_ANALOG" 1 347 "0x05" "!old only provided for compatibility"
d G "AN0_TO_AN8_ANALOG" 1 348 "0x06" "!old only provided for compatibility"
d G "AN0_TO_AN7_ANALOG" 1 349 "0x07" "!old only provided for compatibility"
d G "AN0_TO_AN6_ANALOG" 1 350 "0x08" "!old only provided for compatibility"
d G "AN0_TO_AN5_ANALOG" 1 351 "0x09" "!old only provided for compatibility"
d G "AN0_TO_AN4_ANALOG" 1 352 "0x0A" "!old only provided for compatibility"
d G "AN0_TO_AN3_ANALOG" 1 353 "0x0B" "!old only provided for compatibility"
d G "AN0_TO_AN2_ANALOG" 1 354 "0x0C" "!old only provided for compatibility"
d G "AN0_TO_AN1_ANALOG" 1 355 "0x0D" "!old only provided for compatibility"
d G "AN0_ANALOG" 1 356 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 1 359 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 1 360 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 1 361 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 1 362 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 1 365 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 1 366 "1"
d G "ADC_READ_ONLY" 1 367 "6"
d G "L_TO_H" 1 375 "0x40"
d G "H_TO_L" 1 376 "0"
d G "GLOBAL" 1 378 "0xF2C0"
d G "PERIPH" 1 379 "0xF240"
d G "INT_RTCC" 1 380 "0x00F220"
d G "INT_TIMER0" 1 381 "0x00F220"
d G "INT_TIMER1" 1 382 "0x009D01"
d G "INT_TIMER2" 1 383 "0x009D02"
d G "INT_TIMER3" 1 384 "0x00A002"
d G "INT_EXT_L2H" 1 385 "0x5000F210"
d G "INT_EXT_H2L" 1 386 "0x6000F210"
d G "INT_EXT" 1 387 "0x00F210"
d G "INT_EXT1_L2H" 1 388 "0x5001F008"
d G "INT_EXT1_H2L" 1 389 "0x6001F008"
d G "INT_EXT1" 1 390 "0x00F008"
d G "INT_EXT2_L2H" 1 391 "0x5002F010"
d G "INT_EXT2_H2L" 1 392 "0x6002F010"
d G "INT_EXT2" 1 393 "0x00F010"
d G "INT_RB" 1 394 "0x00FFF208"
d G "INT_AD" 1 395 "0x009D40"
d G "INT_RDA" 1 396 "0x009D20"
d G "INT_TBE" 1 397 "0x009D10"
d G "INT_SSP" 1 398 "0x009D08"
d G "INT_CCP1" 1 399 "0x009D04"
d G "INT_CCP2" 1 400 "0x00A001"
d G "INT_BUSCOL" 1 401 "0x00A008"
d G "INT_LOWVOLT" 1 402 "0x00A004"
d G "INT_COMP" 1 403 "0x00A040"
d G "INT_EEPROM" 1 404 "0x00A010"
d G "INT_OSCF" 1 405 "0x00A080"
d G "INT_USB" 1 406 "0x00A020"
D G "usb_cdc_kbhit" 2 169 "() (usb_cdc_get_buffer_status.got)"
D G "usb_cdc_putready" 2 170 "() (usb_cdc_put_buffer_nextin<sizeof(usb_cdc_put_buffer))"
D G "usb_cdc_connected" 2 171 "() (usb_cdc_got_set_line_coding)"
V L "c" 2 172 "int8"
F G "usb_cdc_putc_fast" 2 172 "void(int8 c)"
F G "usb_cdc_getc" 2 173 "int8()"
V L "c" 2 174 "int8"
F G "usb_cdc_putc" 2 174 "void(int8 c)"
F G "usb_cdc_get_discard" 2 175 "void()" "input.c ported to use CDC:"
F G "get_float_usb" 2 178 "float()"
F G "get_long_usb" 2 179 "sint16()"
F G "get_int_usb" 2 180 "sint8()"
V L "s" 2 181 "*int8"
V L "max" 2 181 "int8"
F G "get_string_usb" 2 181 "void(*int8 s,int8 max)"
F G "gethex_usb" 2 182 "int8()"
F G "gethex1_usb" 2 183 "int8()" "functions automatically called by USB handler code"
F G "usb_isr_tkn_cdc" 2 186 "void()"
F G "usb_cdc_init" 2 187 "void()"
F G "usb_isr_tok_out_cdc_control_dne" 2 188 "void()"
F G "usb_isr_tok_in_cdc_data_dne" 2 189 "void()"
F G "usb_isr_tok_out_cdc_data_dne" 2 190 "void()"
F G "usb_cdc_flush_out_buffer" 2 192 "void()" "Include the CCS USB Libraries.  See the comments at the top of these"
D G "__USB_PIC_PERIF__" 2 201 "1"
D G "__PIC18_USB_H__" 3 130 ""
D G "__USB_HARDWARE__" 3 132 ""
D G "__PIC__" 3 135 "1"
D G "USB_USE_FULL_SPEED" 3 138 "TRUE"
D G "USB_MAX_EP0_PACKET_LENGTH" 3 151 "64"
D G "__USB_HW_LAYER_H__" 4 34 ""
E G "USB_DTS_DATA1" 4 36 "1"
E G "USB_DTS_TOGGLE" 4 36 "2"
E G "USB_DTS_DATA0" 4 37 "0"
E G "USB_DTS_STALL" 4 37 "3"
E G "USB_DTS_USERX" 4 37 "4" "USER LEVEL FUNCTIONS:"
C L "usb_cdc_flush_out_buffer" 4 2 5 "FUNCTION"
F G "usb_init" 4 48 "void()" "/* usb_init_cs()"
C L "usb_init" 4 2 4 "FUNCTION"
F G "usb_init_cs" 4 56 "void()" "/* usb_task()"
C L "usb_init_cs" 4 2 4 "FUNCTION"
F G "usb_task" 4 64 "void()" "/* usb_attach()"
C L "usb_task" 4 2 11 "FUNCTION"
F G "usb_attach" 4 79 "void()" "/* usb_detach()"
C L "usb_attach" 4 2 14 "FUNCTION"
F G "usb_detach" 4 97 "void()" "/* usb_put_packet()"
C L "usb_detach" 4 2 27 "FUNCTION"
V L "endpoint" 4 128 "int8"
V L "ptr" 4 128 "*int8"
V L "len" 4 128 "int16"
V L "tgl" 4 128 "USB_DTS_BIT"
F G "usb_put_packet" 4 128 "int8(int8 endpoint,*int8 ptr,int16 len,USB_DTS_BIT tgl)" "/* usb_get_packet(endpoint, *ptr, max)"
C L "usb_put_packet" 4 2 22 "FUNCTION"
V L "endpoint" 4 154 "int8"
V L "ptr" 4 154 "*int8"
V L "max" 4 154 "int16"
F G "usb_get_packet" 4 154 "int16(int8 endpoint,*int8 ptr,int16 max)" "/* usb_kbhit(endpoint)"
C L "usb_get_packet" 4 2 12 "FUNCTION"
V L "en" 4 170 "int8"
F G "usb_kbhit" 4 170 "int8(int8 en)" "/* usb_tbe(endpoint)"
C L "usb_kbhit" 4 2 13 "FUNCTION"
V L "en" 4 187 "int8"
F G "usb_tbe" 4 187 "int8(int8 en)" "END USER LEVEL FUNCTIONS /////////////////////////////////////"
C L "usb_tbe" 4 2 16 "FUNCTION"
V L "endpoint" 4 212 "int8"
F G "usb_stall_ep" 4 212 "void(int8 endpoint)" "/* usb_unstall_ep(endpoint, direction)"
C L "usb_stall_ep" 4 2 10 "FUNCTION"
V L "endpoint" 4 227 "int8"
F G "usb_unstall_ep" 4 227 "void(int8 endpoint)" "/* usb_endpoint_stalled()"
C L "usb_unstall_ep" 4 2 15 "FUNCTION"
V L "endpoint" 4 246 "int8"
F G "usb_endpoint_stalled" 4 246 "int8(int8 endpoint)" "/* usb_set_address(address)"
C L "usb_endpoint_stalled" 4 2 7 "FUNCTION"
V L "address" 4 257 "int8"
F G "usb_set_address" 4 257 "void(int8 address)" "/* usb_set_configured()"
C L "usb_set_address" 4 2 10 "FUNCTION"
V L "config" 4 271 "int8"
F G "usb_set_configured" 4 271 "void(int8 config)" "/* usb_disable_endpoints()"
C L "usb_set_configured" 4 2 4 "FUNCTION"
F G "usb_disable_endpoints" 4 279 "void()" "/* usb_disable_endpoint()"
C L "usb_disable_endpoints" 4 2 6 "FUNCTION"
V L "en" 4 290 "int8"
F G "usb_disable_endpoint" 4 290 "void(int8 en)" "/* usb_request_send_response(len)"
C L "usb_disable_endpoint" 4 2 28 "FUNCTION"
V L "len" 4 322 "int8"
F G "usb_request_send_response" 4 322 "void(int8 len)"
F G "usb_request_get_data" 4 323 "void()"
F G "usb_request_stall" 4 324 "void()" "EXTRA USER FUNCTIONS /////////////////////////////////"
C L "usb_request_stall" 3 172 15 "FUNCTION"
V L "endpoint" 3 188 "int8"
V L "len" 3 188 "int16"
V L "tgl" 3 188 "USB_DTS_BIT"
F G "usb_flush_in" 3 188 "int8(int8 endpoint,int16 len,USB_DTS_BIT tgl)" "/* usb_flush_out()"
C L "usb_flush_in" 3 172 13 "FUNCTION"
V L "endpoint" 3 205 "int8"
V L "tgl" 3 205 "USB_DTS_BIT"
F G "usb_flush_out" 3 205 "void(int8 endpoint,USB_DTS_BIT tgl)" "/* usb_rx_packet_size()"
C L "usb_flush_out" 3 172 10 "FUNCTION"
V L "endpoint" 3 219 "int8"
F G "usb_rx_packet_size" 3 219 "int16(int8 endpoint)" "usb_desc_cdc.h                            ////"
D G "__USB_DESCRIPTORS__" 5 38 ""
D G "USB_CONFIG_PID" 5 41 "0x0033"
D G "USB_CONFIG_VID" 5 42 "0x0461"
D G "USB_CONFIG_BUS_POWER" 5 43 "100" "100mA  (range is 0..500)"
D G "USB_CONFIG_VERSION" 5 44 "0x0100" "01.00  //range is 00.00 to 99.99"
D G "USB_HID_DEVICE" 5 47 "FALSE"
D G "USB_CDC_DEVICE" 5 48 "TRUE"
D G "USB_CDC_COMM_IN_ENDPOINT" 5 50 "1"
D G "USB_CDC_COMM_IN_SIZE" 5 51 "8"
D G "USB_EP1_TX_ENABLE" 5 52 "USB_ENABLE_INTERRUPT"
D G "USB_EP1_TX_SIZE" 5 53 "USB_CDC_COMM_IN_SIZE"
D G "USB_CDC_DATA_IN_ENDPOINT" 5 56 "2"
D G "USB_CDC_DATA_IN_SIZE" 5 57 "64"
D G "USB_EP2_TX_ENABLE" 5 58 "USB_ENABLE_BULK"
D G "USB_EP2_TX_SIZE" 5 59 "USB_CDC_DATA_IN_SIZE"
D G "USB_CDC_DATA_OUT_ENDPOINT" 5 62 "2"
D G "USB_CDC_DATA_OUT_SIZE" 5 63 "64"
D G "USB_EP2_RX_ENABLE" 5 64 "USB_ENABLE_BULK"
D G "USB_EP2_RX_SIZE" 5 65 "USB_CDC_DATA_OUT_SIZE"
D G "__USB_PROTOTYPES__" 6 286 ""
D G "USB_HID_BOOT_PROTOCOL" 6 296 "FALSE"
D G "USB_HID_IDLE" 6 300 "FALSE"
D G "USB_OPT_FOR_ROM" 6 314 "TRUE"
C L "usb_rx_packet_size" 6 2 9 "FUNCTION"
F G "usb_enumerated" 6 333 "int8()" "/* usb_wait_for_enumeration()"
C L "usb_enumerated" 6 2 6 "FUNCTION"
F G "usb_wait_for_enumeration" 6 343 "void()" "/* usb_gets(endpoint, ptr, max, timeout)"
C L "usb_wait_for_enumeration" 6 2 14 "FUNCTION"
V L "endpoint" 6 361 "int8"
V L "ptr" 6 361 "*int8"
V L "max" 6 361 "int16"
V L "timeout" 6 361 "int16"
F G "usb_gets" 6 361 "int16(int8 endpoint,*int8 ptr,int16 max,int16 timeout)" "/* usb_puts()"
C L "usb_gets" 6 2 16 "FUNCTION"
V L "endpoint" 6 381 "int8"
V L "ptr" 6 381 "*int8"
V L "len" 6 381 "int16"
V L "timeout" 6 381 "int8"
F G "usb_puts" 6 381 "int8(int8 endpoint,*int8 ptr,int16 len,int8 timeout)" "/* usb_attached()"
D G "usb_attached" 6 393 "() TRUE"
C L "usb_puts" 6 2 10 "FUNCTION"
V L "endpoint" 6 407 "int8"
F G "usb_endpoint_is_valid" 6 407 "int8(int8 endpoint)" "END USER-LEVEL API /////////////////////////////////////////////////////"
C L "usb_endpoint_is_valid" 6 2 1 "FUNCTION"
E G "GET_DESCRIPTOR" 6 415 "1"
E G "SET_ADDRESS" 6 415 "2"
E G "NONE" 6 415 "0"
E G "USB_GETDESC_CONFIG_TYPE" 6 417 "0"
E G "USB_GETDESC_HIDREPORT_TYPE" 6 417 "1"
E G "USB_GETDESC_STRING_TYPE" 6 417 "2"
E G "USB_GETDESC_DEVICE_TYPE" 6 417 "3"
C L "usb_endpoint_is_valid" 6 2 1 "FUNCTION"
C L "usb_endpoint_is_valid" 6 2 1 "FUNCTION"
C L "usb_endpoint_is_valid" 6 2 1 "FUNCTION"
C L "usb_endpoint_is_valid" 6 2 1 "FUNCTION"
T G "TYPE_USB_STACK_STATUS" 6 425 "{USB_STATES dev_req,int8 curr_config,int8 status_device,USB_GETDESC_TYPES getdesc_type}"
V G "USB_stack_status" 6 435 "TYPE_USB_STACK_STATUS" "/* usb_token_reset()"
C L "usb_endpoint_is_valid" 6 2 5 "FUNCTION"
F G "usb_token_reset" 6 444 "void()" "/* usb_isr_tok_setup_dne()"
C L "usb_token_reset" 6 2 31 "FUNCTION"
F G "usb_isr_tok_setup_dne" 6 479 "void()" "/* usb_isr_tok_out_dne()"
C L "usb_isr_tok_setup_dne" 6 2 10 "FUNCTION"
V L "endpoint" 6 493 "int8"
F G "usb_isr_tok_out_dne" 6 493 "void(int8 endpoint)" "/* usb_isr_tok_in_dne(endpoint)"
C L "usb_isr_tok_out_dne" 6 2 10 "FUNCTION"
V L "endpoint" 6 507 "int8"
F G "usb_isr_tok_in_dne" 6 507 "void(int8 endpoint)" "END STACK-LEVEL API USED BY HW DRIVERS /////////////////////////////////"
D G "USB_NUM_CONFIGURATIONS" 6 513 "1" "DO NOT CHANGE"
D G "PID_IN" 6 516 "0x09" "device to host transactions"
D G "PID_OUT" 6 517 "0x01" "host to device transactions"
D G "PID_SETUP" 6 518 "0x0D" "host to device setup transaction"
D G "PID_ACK" 6 519 "0x02" "receiver accepts error-free data packet"
D G "PID_DATA0" 6 520 "0x03" "data packet with even sync bit"
D G "PID_SOF" 6 521 "0x05" "start of framer marker and frame number"
D G "PID_NAK" 6 522 "0x0A" "receiver can't accept data or sender cant send data or has no data to transmit"
D G "PID_DATA1" 6 523 "0x0B" "data packet with odd sync bit"
D G "PID_PRE" 6 524 "0x0C" "preamble issued by host.  enables downstream traffic to low-speed device"
D G "PID_STALL" 6 525 "0x0E" "a control request isnt supported or the endpoint is halted"
D G "USB_DESC_DEVICE_TYPE" 6 528 "0x01" "#DEFINE USB_DEVICE_DESC_KEY      0x01"
D G "USB_DESC_CONFIG_TYPE" 6 529 "0x02" "#DEFINE USB_CONFIG_DESC_KEY      0x02"
D G "USB_DESC_STRING_TYPE" 6 530 "0x03" "#DEFINE USB_STRING_DESC_KEY      0x03"
D G "USB_DESC_INTERFACE_TYPE" 6 531 "0x04" "#DEFINE USB_INTERFACE_DESC_KEY   0x04"
D G "USB_DESC_ENDPOINT_TYPE" 6 532 "0x05" "#DEFINE USB_ENDPOINT_DESC_KEY    0x05"
D G "USB_DESC_CLASS_TYPE" 6 533 "0x21" "#DEFINE USB_CLASS_DESC_KEY       0x21"
D G "USB_DESC_HIDREPORT_TYPE" 6 534 "0x22"
D G "USB_DESC_DEVICE_LEN" 6 537 "18" "#DEFINE USB_DEVICE_DESC_LEN      18"
D G "USB_DESC_CONFIG_LEN" 6 538 "9" "#DEFINE USB_CONFIG_DESC_LEN      9"
D G "USB_DESC_INTERFACE_LEN" 6 539 "9" "#DEFINE USB_INTERFACE_DESC_LEN   9"
D G "USB_DESC_CLASS_LEN" 6 540 "9" "#DEFINE USB_CLASS_DESC_LEN       9"
D G "USB_DESC_ENDPOINT_LEN" 6 541 "7" "#DEFINE USB_ENDPOINT_DESC_LEN    7"
D G "USB_STANDARD_REQUEST_GET_STATUS" 6 544 "0x00"
D G "USB_STANDARD_REQUEST_CLEAR_FEATURE" 6 545 "0x01"
D G "USB_STANDARD_REQUEST_SET_FEATURE" 6 546 "0x03"
D G "USB_STANDARD_REQUEST_SET_ADDRESS" 6 547 "0x05"
D G "USB_STANDARD_REQUEST_GET_DESCRIPTOR" 6 548 "0x06"
D G "USB_STANDARD_REQUEST_SET_DESCRIPTOR" 6 549 "0x07"
D G "USB_STANDARD_REQUEST_GET_CONFIGURATION" 6 550 "0x08"
D G "USB_STANDARD_REQUEST_SET_CONFIGURATION" 6 551 "0x09"
D G "USB_STANDARD_REQUEST_GET_INTERFACE" 6 552 "0x0A"
D G "USB_STANDARD_REQUEST_SET_INTERFACE" 6 553 "0x0B"
D G "USB_STANDARD_REQUEST_SYNCH_FRAME" 6 554 "0x0C"
D G "USB_HID_REQUEST_GET_REPORT" 6 557 "0x01"
D G "USB_HID_REQUEST_GET_IDLE" 6 558 "0x02"
D G "USB_HID_REQUEST_GET_PROTOCOL" 6 559 "0x03"
D G "USB_HID_REQUEST_SET_REPORT" 6 560 "0x09"
D G "USB_HID_REQUEST_SET_IDLE" 6 561 "0x0A"
D G "USB_HID_REQUEST_SET_PROTOCOL" 6 562 "0x0B"
D G "USB_ENDPOINT_TYPE_CONTROL" 6 565 "0x00"
D G "USB_ENDPOINT_TYPE_ISOCHRONOUS" 6 566 "0x01"
D G "USB_ENDPOINT_TYPE_BULK" 6 567 "0x02"
D G "USB_ENDPOINT_TYPE_INTERRUPT" 6 568 "0x03"
D G "USB_ENABLE_DISABLED" 6 571 "-1"
D G "USB_ENABLE_BULK" 6 572 "USB_ENDPOINT_TYPE_BULK"
D G "USB_ENABLE_ISOCHRONOUS" 6 573 "USB_ENDPOINT_TYPE_ISOCHRONOUS"
D G "USB_ENABLE_INTERRUPT" 6 574 "USB_ENDPOINT_TYPE_INTERRUPT"
D G "USB_ENABLE_CONTROL" 6 575 "USB_ENDPOINT_TYPE_CONTROL"
D G "USB_EP0_TX_ENABLE" 6 581 "USB_ENABLE_CONTROL"
D G "USB_EP0_RX_ENABLE" 6 582 "USB_ENABLE_CONTROL"
D G "USB_EP0_RX_SIZE" 6 583 "USB_MAX_EP0_PACKET_LENGTH" "endpoint 0 is setup, and should always be the MAX_PACKET_LENGTH.  Slow speed specifies 8"
D G "USB_EP0_TX_SIZE" 6 584 "USB_MAX_EP0_PACKET_LENGTH" "endpoint 0 is setup, and should always be the MAX_PACKET_LENGTH.  Slow speed specifies 8"
D G "USB_EP1_RX_ENABLE" 6 591 "USB_ENABLE_DISABLED"
D G "USB_EP1_RX_SIZE" 6 598 "0"
D G "USB_EP3_TX_ENABLE" 6 650 "USB_ENABLE_DISABLED"
D G "USB_EP3_RX_ENABLE" 6 653 "USB_ENABLE_DISABLED"
D G "USB_EP3_RX_SIZE" 6 660 "0"
D G "USB_EP3_TX_SIZE" 6 671 "0"
D G "USB_EP4_TX_ENABLE" 6 681 "USB_ENABLE_DISABLED"
D G "USB_EP4_RX_ENABLE" 6 684 "USB_ENABLE_DISABLED"
D G "USB_EP4_RX_SIZE" 6 691 "0"
D G "USB_EP4_TX_SIZE" 6 702 "0"
D G "USB_EP5_TX_ENABLE" 6 712 "USB_ENABLE_DISABLED"
D G "USB_EP5_RX_ENABLE" 6 715 "USB_ENABLE_DISABLED"
D G "USB_EP5_RX_SIZE" 6 722 "0"
D G "USB_EP5_TX_SIZE" 6 733 "0"
D G "USB_EP6_TX_ENABLE" 6 743 "USB_ENABLE_DISABLED"
D G "USB_EP6_RX_ENABLE" 6 746 "USB_ENABLE_DISABLED"
D G "USB_EP6_RX_SIZE" 6 753 "0"
D G "USB_EP6_TX_SIZE" 6 764 "0"
D G "USB_EP7_TX_ENABLE" 6 774 "USB_ENABLE_DISABLED"
D G "USB_EP7_RX_ENABLE" 6 777 "USB_ENABLE_DISABLED"
D G "USB_EP7_RX_SIZE" 6 784 "0"
D G "USB_EP7_TX_SIZE" 6 795 "0"
D G "USB_EP8_TX_ENABLE" 6 805 "USB_ENABLE_DISABLED"
D G "USB_EP8_RX_ENABLE" 6 808 "USB_ENABLE_DISABLED"
D G "USB_EP8_RX_SIZE" 6 815 "0"
D G "USB_EP8_TX_SIZE" 6 826 "0"
D G "USB_EP9_TX_ENABLE" 6 836 "USB_ENABLE_DISABLED"
D G "USB_EP9_RX_ENABLE" 6 839 "USB_ENABLE_DISABLED"
D G "USB_EP9_RX_SIZE" 6 846 "0"
D G "USB_EP9_TX_SIZE" 6 857 "0"
D G "USB_EP10_TX_ENABLE" 6 867 "USB_ENABLE_DISABLED"
D G "USB_EP10_RX_ENABLE" 6 870 "USB_ENABLE_DISABLED"
D G "USB_EP10_RX_SIZE" 6 877 "0"
D G "USB_EP10_TX_SIZE" 6 888 "0"
D G "USB_EP11_TX_ENABLE" 6 898 "USB_ENABLE_DISABLED"
D G "USB_EP11_RX_ENABLE" 6 901 "USB_ENABLE_DISABLED"
D G "USB_EP11_RX_SIZE" 6 908 "0"
D G "USB_EP11_TX_SIZE" 6 919 "0"
D G "USB_EP12_TX_ENABLE" 6 929 "USB_ENABLE_DISABLED"
D G "USB_EP12_RX_ENABLE" 6 932 "USB_ENABLE_DISABLED"
D G "USB_EP12_RX_SIZE" 6 939 "0"
D G "USB_EP12_TX_SIZE" 6 950 "0"
D G "USB_EP13_TX_ENABLE" 6 960 "USB_ENABLE_DISABLED"
D G "USB_EP13_RX_ENABLE" 6 963 "USB_ENABLE_DISABLED"
D G "USB_EP13_RX_SIZE" 6 970 "0"
D G "USB_EP13_TX_SIZE" 6 981 "0"
D G "USB_EP14_TX_ENABLE" 6 991 "USB_ENABLE_DISABLED"
D G "USB_EP14_RX_ENABLE" 6 994 "USB_ENABLE_DISABLED"
D G "USB_EP14_RX_SIZE" 6 1001 "0"
D G "USB_EP14_TX_SIZE" 6 1012 "0"
D G "USB_EP15_TX_ENABLE" 6 1022 "USB_ENABLE_DISABLED"
D G "USB_EP15_RX_ENABLE" 6 1025 "USB_ENABLE_DISABLED"
D G "USB_EP15_RX_SIZE" 6 1032 "0"
D G "USB_EP15_TX_SIZE" 6 1043 "0"
V G "usb_ep_tx_type" 6 1050 "int8[16]"
V G "usb_ep_rx_type" 6 1059 "int8[16]"
V G "usb_ep_tx_size" 6 1068 "int16[16]"
V G "usb_ep_rx_size" 6 1077 "int16[16]"
D G "USB_TOTAL_CONFIG_LEN" 5 77 "67" "config+interface+class+endpoint+endpoint (2 endpoints)"
V G "USB_CONFIG_DESC" 5 79 "int8[1]" "IN ORDER TO COMPLY WITH WINDOWS HOSTS, THE ORDER OF THIS ARRAY MUST BE:"
C L "usb_isr_tok_in_dne" 5 71 5 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 71 1 "FUNCTION"
D G "USB_MAX_NUM_INTERFACES" 5 180 "2"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
V G "USB_NUM_INTERFACES" 5 183 "int8[1]"
C L "usb_isr_tok_in_dne" 5 174 5 "FUNCTION"
V G "USB_CLASS_DESCRIPTORS" 5 190 "int8[1][2][4]" "config 1"
C L "usb_isr_tok_in_dne" 5 174 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
V G "USB_DEVICE_DESC" 5 212 "int8[18]" "starts of with device configuration. only one possible"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 5 "FUNCTION"
V G "USB_STRING_DESC_OFFSET" 5 243 "int8[1]"
C L "usb_isr_tok_in_dne" 5 174 5 "FUNCTION"
V G "USB_STRING_DESC" 5 250 "int8[1]" "string 0"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 5 174 1 "FUNCTION"
D G "__USB_DRIVER__" 7 151 ""
C L "usb_isr_tok_in_dne" 6 2 279 "FUNCTION"
D G "__PIC18_USB_C__" 8 96 ""
C L "usb_isr_tok_in_dne" 6 2 279 "FUNCTION"
D G "USB_IGNORE_RX_DTS" 8 104 "FALSE"
D G "USB_IGNORE_TX_DTS" 8 108 "FALSE"
D G "__USB_4550__" 8 147 ""
D G "USB_TOTAL_RAM_SPACE" 8 148 " ((unsigned int16)0x400)"
D G "USB_RAM_START" 8 149 "0x400"
D G "USB_NUM_UEP" 8 150 "16"
D G "USB_LAST_ALLOWED_ENDPOINT" 8 151 "16"
D G "USB_BDT_START" 8 165 "USB_RAM_START"
D G "USB_LAST_DEFINED_ENDPOINT" 8 195 "2"
D G "USB_CONTROL_REGISTER_SIZE" 8 202 " ((USB_LAST_DEFINED_ENDPOINT+1)*8)"
D G "USB_DATA_BUFFER_NEEDED" 8 204 " (USB_EP0_TX_SIZE+USB_EP0_RX_SIZE+USB_EP1_TX_SIZE+                            USB_EP1_RX_SIZE+USB_EP2_TX_SIZE+USB_EP2_RX_SIZE+                            USB_EP3_TX_SIZE+USB_EP3_RX_SIZE+USB_EP4_TX_SIZE+                            USB_EP4_RX_SIZE+USB_EP5_TX_SIZE+USB_EP5_RX_SIZE+                            USB_EP6_TX_SIZE+USB_EP6_RX_SIZE+USB_EP7_TX_SIZE+                            USB_EP7_RX_SIZE+USB_EP8_TX_SIZE+USB_EP8_RX_SIZE+                            USB_EP9_TX_SIZE+USB_EP9_RX_SIZE+USB_EP10_TX_SIZE+                            USB_EP10_RX_SIZE+USB_EP11_TX_SIZE+USB_EP11_RX_SIZE+                            USB_EP12_TX_SIZE+USB_EP12_RX_SIZE+USB_EP13_TX_SIZE+                            USB_EP13_RX_SIZE+USB_EP14_TX_SIZE+USB_EP14_RX_SIZE+                            USB_EP15_TX_SIZE+USB_EP15_RX_SIZE)"
D G "USB_DATA_BUFFER_LOCATION" 8 231 " ((int16)USB_RAM_START+USB_CONTROL_REGISTER_SIZE)"
T G "STRUCT_BD" 8 241 "{int8 stat,int8 cnt,int16 addr}"
C L "usb_isr_tok_in_dne" 8 100 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 8 100 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 8 100 1 "FUNCTION"
V G "g_USBRAM" 8 274 "{}"
D G "g_USBBDT" 8 276 "g_USBRAM.bd"
D G "usb_ep0_rx_buffer" 8 312 "g_USBRAM.buffer.ep0_rx_buffer"
D G "usb_ep0_tx_buffer" 8 313 "g_USBRAM.buffer.ep0_tx_buffer"
D G "usb_ep1_rx_buffer" 8 316 "g_USBRAM.buffer.ep1_rx_buffer"
D G "usb_ep1_tx_buffer" 8 317 "g_USBRAM.buffer.ep1_tx_buffer"
D G "usb_ep2_rx_buffer" 8 318 "g_USBRAM.buffer.ep2_rx_buffer"
D G "usb_ep2_tx_buffer" 8 319 "g_USBRAM.buffer.ep2_tx_buffer"
D G "debug_usb" 8 321 "(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z)"
D G "debug_putc" 8 322 "(c)"
D G "debug_display_ram" 8 325 "(x,y)"
D G "USB_USE_ERROR_COUNTER" 8 343 "FALSE"
D G "USB_PING_PONG_MODE_OFF" 8 346 "0" "no ping pong"
D G "USB_PING_PONG_MODE_E0" 8 347 "1" "ping pong endpoint 0 only"
D G "USB_PING_PONG_MODE_ON" 8 348 "2" "ping pong all endpoints"
D G "USB_PING_PONG_MODE" 8 352 "USB_PING_PONG_MODE_OFF"
C L "usb_isr_tok_in_dne" 8 100 1 "FUNCTION"
D G "UEP0_LOC" 8 371 "0xF70"
V G "USTATCopy" 8 422 "int8"
V G "g_UEP" 8 424 "int8[16]"
D G "UEP" 8 426 "(x) g_UEP[x]"
D G "BIT_SOF" 8 428 "6"
D G "BIT_STALL" 8 429 "5"
D G "BIT_IDLE" 8 430 "4"
D G "BIT_TRN" 8 431 "3"
D G "BIT_ACTV" 8 432 "2"
D G "BIT_UERR" 8 433 "1"
D G "BIT_URST" 8 434 "0"
D G "EP_BDxST_O" 8 460 "(x)    g_USBBDT[x].out.stat"
D G "EP_BDxCNT_O" 8 461 "(x)   g_USBBDT[x].out.cnt"
D G "EP_BDxADR_O" 8 462 "(x)   g_USBBDT[x].out.addr"
D G "EP_BDxST_I" 8 463 "(x)    g_USBBDT[x].in.stat"
D G "EP_BDxCNT_I" 8 464 "(x)   g_USBBDT[x].in.cnt"
D G "EP_BDxADR_I" 8 465 "(x)   g_USBBDT[x].in.addr"
D G "ENDPT_DISABLED" 8 471 "0x00" "endpoint not used"
D G "ENDPT_IN_ONLY" 8 472 "0x02" "endpoint supports IN transactions only"
D G "ENDPT_OUT_ONLY" 8 473 "0x04" "endpoint supports OUT transactions only"
D G "ENDPT_CONTROL" 8 474 "0x06" "Supports IN, OUT and CONTROL transactions - Only use with EP0"
D G "ENDPT_NON_CONTROL" 8 475 "0x0E" "Supports both IN and OUT transactions"
C L "usb_isr_tok_in_dne" 8 100 1 "FUNCTION"
E G "USB_STATE_DETACHED" 8 478 "0"
E G "USB_STATE_ATTACHED" 8 478 "1"
E G "USB_STATE_POWERED" 8 478 "2"
E G "USB_STATE_DEFAULT" 8 479 "3"
E G "USB_STATE_ADDRESS" 8 479 "4"
E G "USB_STATE_CONFIGURED" 8 479 "5"
V G "usb_state" 8 479 ""
D G "USB_PIC_PID_IN" 8 482 "0x24" "device to host transactions"
D G "USB_PIC_PID_OUT" 8 483 "0x04" "host to device transactions"
D G "USB_PIC_PID_SETUP" 8 484 "0x34" "host to device setup transaction"
D G "USTAT_IN_E0" 8 486 "4"
D G "USTAT_OUT_SETUP_E0" 8 487 "0"
D G "__USB_UIF_RESET" 8 489 "0x01"
D G "__USB_UIF_ERROR" 8 490 "0x02"
D G "__USB_UIF_ACTIVE" 8 491 "0x04"
D G "__USB_UIF_TOKEN" 8 492 "0x08"
D G "__USB_UIF_IDLE" 8 493 "0x10"
D G "__USB_UIF_STALL" 8 494 "0x20"
D G "__USB_UIF_SOF" 8 495 "0x40"
D G "STANDARD_INTS" 8 500 "__USB_UIF_STALL|__USB_UIF_IDLE|__USB_UIF_TOKEN|__USB_UIF_ACTIVE|__USB_UIF_RESET"
D G "__USB_UCFG_UTEYE" 8 503 "0x80"
D G "__USB_UCFG_UOEMON" 8 505 "0x40"
D G "__USB_UCFG_UPUEN" 8 507 "0x10"
D G "__USB_UCFG_UTRDIS" 8 509 "0x08"
D G "__USB_UCFG_FSEN" 8 511 "0x04"
D G "__USB_UCFG_MY_UPUEN" 8 522 "__USB_UCFG_UPUEN"
D G "__UCFG_VAL_ENABLED__" 8 526 " (__USB_UCFG_MY_UPUEN | __USB_UCFG_FSEN | USB_PING_PONG_MODE)"
D G "__UCFG_VAL_DISABLED__" 8 532 "__USB_UCFG_UTRDIS"
V G "__setup_0_tx_size" 8 538 "int8" "interrupt handler, specific to PIC18Fxx5x peripheral only"
F G "usb_handle_interrupt" 8 541 "void()"
F G "usb_isr_rst" 8 542 "void()"
F G "usb_isr_uerr" 8 543 "void()"
F G "usb_isr_sof" 8 544 "void()"
F G "usb_isr_activity" 8 545 "void()"
F G "usb_isr_uidle" 8 546 "void()"
F G "usb_isr_tok_dne" 8 547 "void()"
F G "usb_isr_stall" 8 548 "void()"
F G "usb_init_ep0_setup" 8 549 "void()"
C L "usb_init_ep0_setup" 8 100 2 "FUNCTION"
V L "en" 8 558 "int8"
F G "usb_kbhit" 8 558 "int8(int8 en)"
C L "usb_tbe" 8 100 1 "FUNCTION"
V L "en" 8 564 "int8"
F G "usb_tbe" 8 564 "int8(int8 en)"
C L "usb_detach" 8 100 1 "FUNCTION"
F G "usb_detach" 8 570 "void(int8 en)"
C L "usb_detach" 8 100 1 "FUNCTION"
C L "usb_detach" 8 100 1 "FUNCTION"
C L "usb_detach" 8 100 1 "FUNCTION"
C L "usb_detach" 8 100 1 "FUNCTION"
C L "usb_detach" 8 100 2 "FUNCTION"
C L "usb_attach" 8 100 1 "FUNCTION"
F G "usb_attach" 8 592 "void(int8 en)"
C L "usb_attach" 8 100 1 "FUNCTION"
C L "usb_attach" 8 100 1 "FUNCTION"
C L "usb_attach" 8 100 1 "FUNCTION"
C L "usb_init_cs" 8 100 1 "FUNCTION"
F G "usb_init_cs" 8 603 "void(int8 en)"
C L "usb_task" 8 100 1 "FUNCTION"
F G "usb_task" 8 609 "void(int8 en)"
C L "usb_task" 8 100 1 "FUNCTION"
C L "usb_init" 8 100 1 "FUNCTION"
F G "usb_init" 8 650 "void(int8 en)"
C L "usb_flush_in" 8 100 1 "FUNCTION"
V L "endpoint" 8 662 "int8"
V L "len" 8 662 "int16"
V L "tgl" 8 662 "USB_DTS_BIT"
F G "usb_flush_in" 8 662 "int8(int8 endpoint,int16 len,USB_DTS_BIT tgl)"
V L "i" 8 664 "int8"
C L "usb_flush_in" 8 100 1 "FUNCTION"
C L "usb_flush_in" 8 100 1 "FUNCTION"
C L "usb_flush_in" 8 100 1 "FUNCTION"
C L "usb_flush_in" 8 100 1 "FUNCTION"
C L "usb_flush_in" 8 100 2 "FUNCTION"
C L "usb_flush_in" 8 100 2 "FUNCTION"
C L "usb_flush_in" 8 100 1 "FUNCTION"
C L "usb_put_packet" 8 100 1 "FUNCTION"
V L "endpoint" 8 720 "int8"
V L "ptr" 8 720 "*int8"
V L "len" 8 720 "int16"
V L "tgl" 8 720 "USB_DTS_BIT"
F G "usb_put_packet" 8 720 "int8(int8 endpoint,*int8 ptr,int16 len,USB_DTS_BIT tgl)"
V L "buff_add" 8 722 "*int8"
C L "usb_put_packet" 8 100 2 "FUNCTION"
C L "usb_flush_out" 8 100 1 "FUNCTION"
V L "endpoint" 8 742 "int8"
V L "tgl" 8 742 "USB_DTS_BIT"
F G "usb_flush_out" 8 742 "void(int8 endpoint,USB_DTS_BIT tgl,USB_DTS_BIT tgl)"
V L "i" 8 744 "int8"
V L "len" 8 745 "int16"
C L "usb_flush_out" 8 100 1 "FUNCTION"
C L "usb_flush_out" 8 100 1 "FUNCTION"
C L "usb_flush_out" 8 100 1 "FUNCTION"
C L "usb_flush_out" 8 100 1 "FUNCTION"
C L "usb_flush_out" 8 100 1 "FUNCTION"
C L "usb_flush_out" 8 100 2 "FUNCTION"
C L "usb_rx_packet_size" 8 100 1 "FUNCTION"
V L "endpoint" 8 788 "int8"
F G "usb_rx_packet_size" 8 788 "int16(int8 endpoint)"
C L "usb_get_packet_buffer" 8 100 17 "FUNCTION"
V L "endpoint" 8 814 "int8"
V L "ptr" 8 814 "*int8"
V L "max" 8 814 "int16"
F G "usb_get_packet_buffer" 8 814 "int16(int8 endpoint,*int8 ptr,int16 max)"
V L "al" 8 816 "*int8"
V L "st" 8 817 "int8"
V L "i" 8 818 "int16"
C L "usb_get_packet_buffer" 8 100 1 "FUNCTION"
C L "usb_get_packet" 8 100 1 "FUNCTION"
V L "endpoint" 8 836 "int8"
V L "ptr" 8 836 "*int8"
V L "max" 8 836 "int16"
F G "usb_get_packet" 8 836 "int16(int8 endpoint,*int8 ptr,int16 max)"
C L "usb_stall_ep" 8 100 1 "FUNCTION"
V L "endpoint" 8 845 "int8"
F G "usb_stall_ep" 8 845 "void(int8 endpoint,*int8 ptr,int16 max)"
V L "direction" 8 847 "int1"
C L "usb_unstall_ep" 8 100 1 "FUNCTION"
V L "endpoint" 8 863 "int8"
F G "usb_unstall_ep" 8 863 "void(int8 endpoint,int16 max)"
V L "direction" 8 865 "int1"
C L "usb_endpoint_stalled" 8 100 1 "FUNCTION"
V L "endpoint" 8 885 "int8"
F G "usb_endpoint_stalled" 8 885 "int8(int8 endpoint)"
V L "direction" 8 887 "int1"
V L "st" 8 888 "int8"
C L "usb_set_address" 8 100 1 "FUNCTION"
V L "address" 8 906 "int8"
F G "usb_set_address" 8 906 "void(int8 address)"
C L "usb_set_configured" 8 100 1 "FUNCTION"
V L "config" 8 921 "int8"
F G "usb_set_configured" 8 921 "void(int8 config)"
V L "en" 8 923 "int8"
V L "addy" 8 924 "int16"
V L "new_uep" 8 925 "int8"
V L "len" 8 926 "int16"
V L "i" 8 927 "int8"
C L "usb_set_configured" 8 100 1 "FUNCTION"
C L "usb_set_configured" 8 100 1 "FUNCTION"
C L "usb_set_configured" 8 100 1 "FUNCTION"
C L "usb_disable_endpoint" 8 100 1 "FUNCTION"
V L "en" 8 977 "int8"
F G "usb_disable_endpoint" 8 977 "void(int8 en)"
C L "usb_disable_endpoint" 8 100 1 "FUNCTION"
C L "usb_disable_endpoint" 8 100 1 "FUNCTION"
C L "usb_disable_endpoints" 8 100 1 "FUNCTION"
F G "usb_disable_endpoints" 8 989 "void(int8 en)"
V L "i" 8 991 "int8"
C L "usb_disable_endpoints" 8 100 1 "FUNCTION"
C L "usb_clear_trn" 8 100 2 "FUNCTION"
F G "usb_clear_trn" 8 1004 "void()" "UIR_TRN = 0;"
C L "usb_clear_trn" 8 100 1 "FUNCTION"
F G "usb_isr" 8 1028 "void()"
V L "TRNAttempts" 8 1030 "int8"
C L "usb_isr" 8 100 1 "FUNCTION"
C L "usb_isr" 8 100 1 "FUNCTION"
C L "usb_isr" 8 100 1 "FUNCTION"
C L "usb_isr" 8 100 1 "FUNCTION"
C L "usb_isr" 8 100 1 "FUNCTION"
C L "usb_isr" 8 100 1 "FUNCTION"
C L "usb_isr_sof" 8 100 1 "FUNCTION"
F G "usb_isr_sof" 8 1070 "void()"
C L "usb_isr_sof" 8 100 1 "FUNCTION"
C L "usb_isr_rst" 8 100 6 "FUNCTION"
F G "usb_isr_rst" 8 1085 "void()"
C L "usb_isr_rst" 8 100 1 "FUNCTION"
C L "usb_isr_rst" 8 100 1 "FUNCTION"
C L "usb_init_ep0_setup" 8 100 5 "FUNCTION"
F G "usb_init_ep0_setup" 8 1120 "void()"
C L "usb_init_ep0_setup" 8 100 1 "FUNCTION"
C L "usb_isr_uerr" 8 100 7 "FUNCTION"
F G "usb_isr_uerr" 8 1142 "void()"
C L "usb_isr_uerr" 8 100 1 "FUNCTION"
C L "usb_isr_uidle" 8 100 5 "FUNCTION"
F G "usb_isr_uidle" 8 1208 "void()"
C L "usb_isr_uidle" 8 100 2 "FUNCTION"
C L "usb_isr_uidle" 8 100 1 "FUNCTION"
C L "usb_isr_activity" 8 100 6 "FUNCTION"
F G "usb_isr_activity" 8 1228 "void()"
C L "usb_isr_activity" 8 100 1 "FUNCTION"
C L "usb_isr_activity" 8 100 1 "FUNCTION"
C L "usb_isr_activity" 8 100 1 "FUNCTION"
C L "usb_isr_stall" 8 100 5 "FUNCTION"
F G "usb_isr_stall" 8 1248 "void()"
C L "usb_isr_stall" 8 100 1 "FUNCTION"
C L "usb_request_send_response" 8 100 1 "FUNCTION"
V L "len" 8 1264 "int8"
F G "usb_request_send_response" 8 1264 "void(int8 len)"
F G "usb_request_get_data" 8 1265 "void(int8 len)"
F G "usb_request_stall" 8 1266 "void(int8 len)"
C L "usb_isr_tok_dne" 8 100 13 "FUNCTION"
F G "usb_isr_tok_dne" 8 1282 "void(int8 len)"
V L "en" 8 1284 "int8"
C L "usb_isr_tok_dne" 8 100 1 "FUNCTION"
V L "pidKey" 8 1294 "int8"
C L "usb_isr_tok_dne" 8 100 1 "FUNCTION"
C L "usb_isr_tok_dne" 8 100 1 "FUNCTION"
C L "usb_isr_tok_dne" 8 100 1 "FUNCTION"
C L "usb_isr_tok_dne" 8 100 4 "FUNCTION"
C L "usb_isr_tok_dne" 8 100 2 "FUNCTION"
C L "usb_isr_tok_dne" 8 100 1 "FUNCTION"
C L "usb_isr_tok_dne" 8 100 1 "FUNCTION"
C L "usb_isr_tok_dne" 8 100 1 "FUNCTION"
C L "usb_isr_tok_dne" 8 100 1 "FUNCTION"
C L "usb_isr_tok_dne" 8 100 1 "FUNCTION"
C L "usb_isr_tok_dne" 8 100 1 "FUNCTION"
V G "USB_stack_status" 7 180 "TYPE_USB_STACK_STATUS"
V G "USB_address_pending" 7 182 "int8" "save previous state because packets can take several isrs"
V G "usb_getdesc_ptr" 7 183 "int8"
V G "usb_getdesc_len" 7 183 "int8"
C L "usb_put_0len_0" 7 183 1 "FUNCTION"
F G "usb_put_0len_0" 7 189 "void()"
V L "endpoint" 7 190 "int8"
V L "status" 7 190 "*int16"
V L "buffer" 7 190 "*int16"
V L "size" 7 190 "*int8"
F G "usb_match_registers" 7 190 "void(int8 endpoint,*int16 status,*int16 buffer,*int8 size)"
F G "usb_isr_tkn_setup_StandardEndpoint" 7 192 "void()"
F G "usb_isr_tkn_setup_StandardDevice" 7 193 "void()"
F G "usb_isr_tkn_setup_StandardInterface" 7 194 "void()"
F G "usb_Get_Descriptor" 7 198 "void()"
F G "usb_copy_desc_seg_to_ep" 7 199 "void()"
F G "usb_finish_set_address" 7 200 "void()"
V G "USB_Interface" 7 202 "int8[2]" "config state for all of our interfaces, NUM_INTERFACES defined with descriptors"
C L "usb_finish_set_address" 7 183 2 "FUNCTION"
F G "usb_enumerated" 7 207 "int8()"
C L "usb_wait_for_enumeration" 7 183 1 "FUNCTION"
F G "usb_wait_for_enumeration" 7 213 "void()"
C L "usb_puts" 7 183 1 "FUNCTION"
V L "endpoint" 7 219 "int8"
V L "ptr" 7 219 "*int8"
V L "len" 7 219 "int16"
V L "timeout" 7 219 "int8"
F G "usb_puts" 7 219 "int8(int8 endpoint,*int8 ptr,int16 len,int8 timeout)"
V L "i" 7 220 "int16"
V L "res" 7 221 "int1"
V L "this_packet_len" 7 222 "int16"
V L "packet_size" 7 223 "int16"
V L "timeout_1us" 7 224 "int32"
C L "usb_puts" 7 183 2 "FUNCTION"
C L "usb_puts" 7 183 1 "FUNCTION"
C L "usb_puts" 7 183 2 "FUNCTION"
C L "usb_puts" 7 183 1 "FUNCTION"
C L "usb_puts" 7 183 1 "FUNCTION"
C L "usb_puts" 7 183 1 "FUNCTION"
C L "usb_gets" 7 183 1 "FUNCTION"
V L "endpoint" 7 268 "int8"
V L "ptr" 7 268 "*int8"
V L "max" 7 268 "int16"
V L "timeout" 7 268 "int16"
F G "usb_gets" 7 268 "int16(int8 endpoint,*int8 ptr,int16 max,int16 timeout)"
V L "ret" 7 269 "int16"
V L "to" 7 270 "int16"
V L "len" 7 271 "int16"
V L "packet_size" 7 272 "int16"
V L "this_packet_max" 7 273 "int16"
C L "usb_token_reset" 7 183 3 "FUNCTION"
F G "usb_token_reset" 7 304 "void()"
V L "i" 7 306 "int8"
C L "usb_token_reset" 7 183 1 "FUNCTION"
C L "usb_token_reset" 7 183 1 "FUNCTION"
C L "usb_token_reset" 7 183 1 "FUNCTION"
C L "usb_token_reset" 7 183 1 "FUNCTION"
D G "usb_put_0len_0" 7 328 "() usb_request_send_response(0)"
C L "usb_endpoint_is_valid" 7 183 10 "FUNCTION"
V L "endpoint" 7 341 "int8"
F G "usb_endpoint_is_valid" 7 341 "int8(int8 endpoint)"
V L "direction" 7 343 "int1"
C L "usb_endpoint_is_valid" 7 183 1 "FUNCTION"
C L "usb_endpoint_is_valid" 7 183 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 183 1 "FUNCTION"
V L "endpoint" 7 361 "int8"
F G "usb_isr_tok_in_dne" 7 361 "void(int8 endpoint)"
C L "usb_isr_tok_in_dne" 7 183 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 183 1 "FUNCTION"
C L "usb_isr_tok_out_dne" 7 183 1 "FUNCTION"
V L "endpoint" 7 374 "int8"
F G "usb_isr_tok_out_dne" 7 374 "void(int8 endpoint)" "TODO:"
C L "usb_isr_tok_out_dne" 7 183 2 "FUNCTION"
C L "usb_isr_tok_out_dne" 7 183 1 "FUNCTION"
C L "usb_isr_tok_out_dne" 7 183 2 "FUNCTION"
C L "usb_isr_tok_setup_dne" 7 183 2 "FUNCTION"
F G "usb_isr_tok_setup_dne" 7 399 "void(int8 endpoint)"
C L "usb_isr_tok_setup_dne" 7 183 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 7 183 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 7 183 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 7 183 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 7 183 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 7 183 10 "FUNCTION"
F G "usb_isr_tkn_setup_StandardDevice" 7 452 "void(int8 endpoint)"
C L "usb_isr_tkn_setup_StandardDevice" 7 183 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 7 183 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 7 183 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 7 183 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 7 183 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 7 183 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 7 183 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 7 183 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 7 183 10 "FUNCTION"
F G "usb_isr_tkn_setup_StandardInterface" 7 531 "void(int8 endpoint)"
V L "curr_config" 7 532 "int8"
C L "usb_isr_tkn_setup_StandardInterface" 7 183 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 7 183 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 7 183 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 7 183 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 7 183 3 "FUNCTION"
C L "usb_isr_tkn_setup_StandardEndpoint" 7 183 10 "FUNCTION"
F G "usb_isr_tkn_setup_StandardEndpoint" 7 591 "void()"
C L "usb_Get_Descriptor" 7 183 26 "FUNCTION"
F G "usb_Get_Descriptor" 7 689 "void()"
C L "usb_Get_Descriptor" 7 183 1 "FUNCTION"
C L "usb_Get_Descriptor" 7 183 1 "FUNCTION"
C L "usb_Get_Descriptor" 7 183 1 "FUNCTION"
C L "usb_Get_Descriptor" 7 183 1 "FUNCTION"
C L "usb_Get_Descriptor" 7 183 3 "FUNCTION"
C L "usb_finish_set_address" 7 183 11 "FUNCTION"
F G "usb_finish_set_address" 7 763 "void()"
C L "usb_finish_set_address" 7 183 1 "FUNCTION"
C L "usb_finish_set_address" 7 183 1 "FUNCTION"
C L "usb_copy_desc_seg_to_ep" 7 183 3 "FUNCTION"
F G "usb_copy_desc_seg_to_ep" 7 780 "void()"
V L "i" 7 781 "int8"
V L "c" 7 782 "int8"
V G "usb_cdc_line_coding" 2 221 "{int32 dwDTERrate,int8 bCharFormat,int8 bParityType,int8 bDataBits}" "length of time, in ms, of break signal as we received in a SendBreak message."
V G "usb_cdc_break" 2 225 "int16"
V G "usb_cdc_encapsulated_cmd" 2 227 "int8[8]"
V G "usb_cdc_put_buffer" 2 229 "int8[63]"
D G "usb_cdc_put_buffer_free" 2 230 "()  usb_tbe(USB_CDC_DATA_IN_ENDPOINT)"
V G "usb_cdc_put_buffer_nextin" 2 235 "int8"
V G "usb_cdc_get_buffer_status" 2 248 "{int1 got,int8 len,int8 index}"
D G "usb_cdc_get_buffer_status_buffer" 2 251 "usb_ep2_rx_buffer"
V G "usb_cdc_got_set_line_coding" 2 256 "int1"
V G "usb_cdc_carrier" 2 262 "{int1 dte_present,int1 active,int6 reserved}"
V G "g_LastCDCDataPacketSize" 2 264 "int8"
E G "USB_CDC_OUT_NOTHING" 2 266 "0"
E G "USB_CDC_OUT_COMMAND" 2 266 "1"
E G "USB_CDC_OUT_LINECODING" 2 266 "2"
E G "USB_CDC_WAIT_0LEN" 2 266 "3"
V G "__usb_cdc_state" 2 266 ""
C L "usb_isr_tok_out_cdc_control_dne" 2 217 1 "FUNCTION"
F G "usb_isr_tok_out_cdc_control_dne" 2 276 "void()"
C L "usb_isr_tok_out_cdc_control_dne" 2 217 1 "FUNCTION"
C L "usb_isr_tok_out_cdc_control_dne" 2 217 1 "FUNCTION"
C L "usb_isr_tok_out_cdc_control_dne" 2 217 2 "FUNCTION"
C L "usb_isr_tok_out_cdc_control_dne" 2 217 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 2 217 1 "FUNCTION"
F G "usb_isr_tkn_cdc" 2 316 "void()" "make sure the request goes to a CDC interface"
C L "usb_isr_tkn_cdc" 2 217 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 2 217 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 2 217 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 2 217 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 2 217 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 2 217 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 2 217 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 2 217 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 2 217 1 "FUNCTION"
C L "usb_isr_tok_out_cdc_data_dne" 2 217 1 "FUNCTION"
F G "usb_isr_tok_out_cdc_data_dne" 2 361 "void()"
C L "usb_isr_tok_in_cdc_data_dne" 2 217 1 "FUNCTION"
F G "usb_isr_tok_in_cdc_data_dne" 2 377 "void()" "putc('!');"
C L "usb_isr_tok_in_cdc_data_dne" 2 217 1 "FUNCTION"
C L "usb_isr_tok_in_cdc_data_dne" 2 217 1 "FUNCTION"
F G "usb_cdc_flush_out_buffer" 2 387 "void()" "printf(putc_tbe, "FL %U\r\n", usb_cdc_put_buffer_nextin);"
F G "usb_cdc_init" 2 395 "void()"
C L "usb_cdc_get_discard" 2 217 2 "FUNCTION"
F G "usb_cdc_get_discard" 2 412 "void()"
F G "usb_cdc_getc" 2 418 "int8()"
V L "c" 2 420 "int8"
V L "c" 2 434 "int8"
F G "_usb_cdc_putc_fast_noflush" 2 434 "void(int8 c)"
V L "old_gie" 2 437 "int1" "disable global interrupts"
C L "_usb_cdc_putc_fast_noflush" 2 217 1 "FUNCTION"
C L "_usb_cdc_putc_fast_noflush" 2 217 1 "FUNCTION"
V L "c" 2 462 "int8"
F G "usb_cdc_putc_fast" 2 462 "void(int8 c)"
C L "usb_cdc_putc_fast" 2 217 1 "FUNCTION"
C L "usb_cdc_putc_fast" 2 217 1 "FUNCTION"
V L "c" 2 473 "int8"
F G "usb_cdc_putc" 2 473 "void(int8 c)"
C L "usb_cdc_putc" 2 217 1 "FUNCTION"
C L "usb_cdc_putc" 2 217 2 "FUNCTION"
C L "usb_cdc_putc" 2 217 2 "FUNCTION"
V L "ptr" 2 490 "*int8"
F G "usb_cdc_puts" 2 490 "int8(*int8 ptr)"
V L "i" 2 495 "int8"
V L "c" 2 497 "int8"
D G "_CTYPE" 9 12 ""
D G "islower" 9 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 9 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 9 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 9 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 9 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 9 19 "(x)  ((x)==' ')"
D G "isxdigit" 9 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 9 21 "(x)  ((x)<' ')"
D G "isprint" 9 22 "(x)  ((x)>=' ')"
D G "isgraph" 9 23 "(x)  ((x)>' ')"
D G "ispunct" 9 24 "(x)  (((x)>' ')&&!isalnum(x))"
F G "gethex1_usb" 2 521 "int8()"
V L "digit" 2 523 "int8"
F G "gethex_usb" 2 535 "int8()"
V L "lo" 2 536 "int8"
V L "hi" 2 536 "int8"
V L "s" 2 546 "*int8"
V L "max" 2 546 "int8"
F G "get_string_usb" 2 546 "void(*int8 s,int8 max)"
V L "len" 2 547 "int8"
V L "c" 2 548 "int8"
C L "get_string_usb" 2 554 1 "FUNCTION"
D G "_STDLIB" 10 12 ""
D G "RAND_MAX" 10 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 10 25 "1"
T G "div_t" 10 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 10 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
D G "_STDDEF" 11 13 ""
D G "ptrdiff_t" 11 18 "unsigned int16"
D G "size_t" 11 24 "unsigned int16"
D G "wchar_t" 11 26 "char"
D G "NULL" 11 27 "0"
D G "offsetof" 11 29 "(s,f) (offsetofbit(s,f)/8)"
C L "atoi" 10 43 2 "FUNCTION"
C L "atoi" 10 46 1 "*"
C L "atoi" 10 46 1 "*"
V L "s" 10 50 "*int8"
F G "atoi" 10 50 "sint8(*int8 s)" "Syntax: signed int32  atoi32(char * s)"
V L "s" 10 58 "*int8"
F G "atoi32" 10 58 "sint32(*int8 s)"
C L "atoi32" 10 46 3 "FUNCTION"
V L "num" 10 79 "sint32"
V L "base" 10 79 "int8"
V L "s" 10 79 "*int8"
F G "itoa" 10 79 "*int8(sint32 num,int8 base,*int8 s)" "Standard template: signed int16  atol(char * s)"
C L "itoa" 10 81 1 "*"
C L "itoa" 10 81 1 "*"
V L "s" 10 85 "*int8"
F G "atol" 10 85 "sint16(*int8 s)" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "atol" 10 87 1 "*"
C L "atol" 10 87 1 "*"
C L "atol" 10 87 1 "*"
C L "atol" 10 87 1 "*"
V L "s" 10 93 "*int8"
V L "endptr" 10 93 "*int8"
V L "base" 10 93 "sint8"
F G "strtol" 10 93 "sint16(*int8 s,*int8 endptr,sint8 base)" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 10 95 1 "*"
C L "strtol" 10 95 1 "*"
C L "strtol" 10 95 1 "*"
C L "strtol" 10 95 1 "*"
V L "s" 10 101 "*int8"
V L "endptr" 10 101 "*int8"
V L "base" 10 101 "sint8"
F G "strtoul" 10 101 "int16(*int8 s,*int8 endptr,sint8 base)" "Standart template: float strtof(char * s,char *endptr)"
C L "strtoul" 10 95 2 "FUNCTION"
C L "strtoul" 10 103 1 "*"
C L "strtoul" 10 103 1 "*"
C L "strtoul" 10 103 1 "*"
V L "s" 10 110 "*int8"
V L "endptr" 10 110 "*int8"
F G "strtof" 10 110 "float(*int8 s,*int8 endptr)"
D G "strtof48" 10 116 "(s, e) strtof(s, e)"
D G "strtod" 10 117 "(s, e) strtof(s, e)"
C L "strtof" 10 103 1 "FUNCTION"
C L "strtof" 10 120 1 "*"
D G "atof" 10 124 "(s)   strtof(s, 0)"
C L "strtof" 10 120 1 "FUNCTION"
C L "strtof" 10 143 1 "*"
C L "strtof" 10 143 1 "*"
C L "strtof" 10 143 1 "*"
V L "s" 10 149 "*int8"
F G "atoe" 10 149 "float(*int8 s)"
C L "atoe" 10 143 2 "FUNCTION"
C L "atoe" 10 160 1 "*"
C L "atoe" 10 160 1 "*"
C L "atoe" 10 160 1 "*"
C L "atoe" 10 160 1 "*"
C L "atoe" 10 160 1 "*"
F G "rand" 10 169 "int16()" "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
V L "seed" 10 191 "int32"
F G "srand" 10 191 "void(int32 seed)" "Memory management functions"
C L "srand" 10 171 3 "FUNCTION"
V L "string" 10 205 "*int8"
F G "system" 10 205 "sint8(*int8 string)" "Searching and sorting utilities"
C L "system" 10 171 1 "FUNCTION"
C L "system" 10 211 1 "*"
C L "system" 10 211 1 "*"
C L "system" 10 211 1 "*"
C L "system" 10 211 1 "*"
C L "system" 10 211 1 "*"
C L "system" 10 211 1 "*"
C L "system" 10 211 1 "*"
C L "system" 10 211 1 "*"
C L "system" 10 211 1 "*"
C L "system" 10 211 1 "*"
C L "system" 10 211 4 "*"
C L "system" 10 229 1 "*"
C L "system" 10 229 1 "*"
C L "system" 10 229 1 "*"
C L "system" 10 229 1 "*"
C L "system" 10 229 1 "*"
C L "system" 10 229 1 "*"
C L "system" 10 229 1 "*"
C L "system" 10 229 1 "*"
D G "labs" 10 249 "abs"
V L "numer" 10 251 "sint8"
V L "denom" 10 251 "sint8"
F G "div" 10 251 "div_t(sint8 numer,sint8 denom)"
V L "numer" 10 252 "sint16"
V L "denom" 10 252 "sint16"
F G "ldiv" 10 252 "ldiv_t(sint16 numer,sint16 denom)" "Multibyte character functions"
C L "ldiv" 10 229 4 "FUNCTION"
C L "ldiv" 11 2 7 "FUNCTION"
D G "_STRING" 12 12 ""
C L "ldiv" 11 2 7 "FUNCTION"
C L "ldiv" 9 2 7 "FUNCTION"
C L "ldiv" 12 19 10 "FUNCTION"
V L "s1" 12 34 "*int8"
V L "s2" 12 34 "*int8"
V L "n" 12 34 "int16"
F G "memmove" 12 34 "*int8(*int8 s1,*int8 s2,int16 n)"
V L "sc1" 12 36 "*int8"
V L "sc2" 12 37 "*int8"
D G "strcopy" 12 54 "strcpy"
C L "strncpy" 12 19 4 "FUNCTION"
V L "s1" 12 61 "*int8"
V L "s2" 12 61 "*int8"
V L "n" 12 61 "int16"
F G "strncpy" 12 61 "*int8(*int8 s1,*int8 s2,int16 n)"
V L "s" 12 63 "*int8"
C L "strcat" 12 19 3 "FUNCTION"
V L "s1" 12 78 "*int8"
V L "s2" 12 78 "*int8"
F G "strcat" 12 78 "*int8(*int8 s1,*int8 s2)"
V L "s" 12 80 "*int8"
C L "strncat" 12 19 2 "FUNCTION"
V L "s1" 12 96 "*int8"
V L "s2" 12 96 "*int8"
V L "n" 12 96 "int16"
F G "strncat" 12 96 "*int8(*int8 s1,*int8 s2,int16 n)"
V L "s" 12 98 "*int8"
C L "memcmp" 12 19 3 "FUNCTION"
V L "s1" 12 120 "*int8"
V L "s2" 12 120 "*int8"
V L "n" 12 120 "int16"
F G "memcmp" 12 120 "sint8(*int8 s1,*int8 s2,int16 n)"
V L "su1" 12 122 "*int8"
V L "su2" 12 122 "*int8"
C L "strcmp" 12 19 2 "FUNCTION"
V L "s1" 12 134 "*int8"
V L "s2" 12 134 "*int8"
F G "strcmp" 12 134 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 12 19 2 "FUNCTION"
V L "s1" 12 144 "*int8"
V L "s2" 12 144 "*int8"
F G "strcoll" 12 144 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 12 19 4 "FUNCTION"
V L "s1" 12 157 "*int8"
V L "s2" 12 157 "*int8"
V L "n" 12 157 "int16"
F G "strncmp" 12 157 "sint8(*int8 s1,*int8 s2,int16 n)"
C L "strxfrm" 12 19 3 "FUNCTION"
V L "s1" 12 169 "*int8"
V L "s2" 12 169 "*int8"
V L "n" 12 169 "int16"
F G "strxfrm" 12 169 "int16(*int8 s1,*int8 s2,int16 n)"
V L "s" 12 171 "*int8"
V L "n1" 12 172 "int8"
C L "memchr" 12 19 3 "FUNCTION"
V L "s" 12 191 "*int8"
V L "c" 12 191 "int8"
V L "n" 12 191 "int16"
F G "memchr" 12 191 "*int8(*int8 s,int8 c,int16 n)"
V L "uc" 12 193 "int8"
V L "su" 12 194 "*int8"
C L "strchr" 12 19 2 "FUNCTION"
V L "s" 12 205 "*int8"
V L "c" 12 205 "int8"
F G "strchr" 12 205 "*int8(*int8 s,int8 c)"
C L "strcspn" 12 19 4 "FUNCTION"
V L "s1" 12 217 "*int8"
V L "s2" 12 217 "*int8"
F G "strcspn" 12 217 "int8(*int8 s1,*int8 s2)"
V L "sc1" 12 219 "*int8"
V L "sc2" 12 219 "*int8"
C L "strpbrk" 12 19 4 "FUNCTION"
V L "s1" 12 232 "*int8"
V L "s2" 12 232 "*int8"
F G "strpbrk" 12 232 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 12 234 "*int8"
V L "sc2" 12 234 "*int8"
C L "strrchr" 12 19 2 "FUNCTION"
V L "s" 12 247 "*int8"
V L "c" 12 247 "int8"
F G "strrchr" 12 247 "*int8(*int8 s,int8 c)"
V L "p" 12 249 "*int8"
C L "strspn" 12 19 2 "FUNCTION"
V L "s1" 12 262 "*int8"
V L "s2" 12 262 "*int8"
F G "strspn" 12 262 "int8(*int8 s1,*int8 s2)"
V L "sc1" 12 264 "*int8"
V L "sc2" 12 264 "*int8"
C L "strstr" 12 19 6 "FUNCTION"
V L "s1" 12 281 "*int8"
V L "s2" 12 281 "*int8"
F G "strstr" 12 281 "*int8(*int8 s1,*int8 s2)"
V L "s" 12 283 "*int8"
V L "t" 12 283 "*int8"
C L "strtok" 12 19 13 "FUNCTION"
V L "s1" 12 320 "*int8"
V L "s2" 12 320 "*int8"
F G "strtok" 12 320 "*int8(*int8 s1,*int8 s2)"
V L "beg" 12 322 "*int8"
V L "end" 12 322 "*int8"
V L "save" 12 323 "*int8"
C L "strlen" 12 19 6 "FUNCTION"
V L "s" 12 369 "*int8"
F G "strlen" 12 369 "int8(*int8 s)"
V L "sc" 12 371 "*int8"
C L "stricmp" 12 19 2 "FUNCTION"
V L "s1" 12 380 "*int8"
V L "s2" 12 380 "*int8"
F G "stricmp" 12 380 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 12 19 3 "FUNCTION"
V L "s" 12 394 "*int8"
F G "strlwr" 12 394 "*int8(*int8 s)"
V L "p" 12 396 "*int8"
V L "numer" 10 274 "sint8"
V L "denom" 10 274 "sint8"
F G "div" 10 274 "div_t(sint8 numer,sint8 denom)"
V L "val" 10 276 "div_t"
V L "numer" 10 282 "sint16"
V L "denom" 10 282 "sint16"
F G "ldiv" 10 282 "ldiv_t(sint16 numer,sint16 denom)"
V L "val" 10 284 "ldiv_t"
V L "s" 10 361 "*int8"
F G "atoe" 10 361 "float(*int8 s)"
V L "pow10" 10 363 "float"
V L "result" 10 364 "float"
V L "sign" 10 365 "int8"
V L "expsign" 10 366 "int8"
V L "c" 10 367 "int8"
V L "ptr" 10 368 "int8"
V L "i" 10 369 "int8"
V L "exp" 10 370 "float"
V L "expcnt" 10 371 "int8"
C L "atoe" 10 397 1 "FUNCTION"
V L "s" 10 429 "*int8"
F G "atoi" 10 429 "sint8(*int8 s)"
V L "result" 10 431 "sint8"
V L "sign" 10 432 "int8"
V L "base" 10 432 "int8"
V L "index" 10 432 "int8"
V L "c" 10 433 "int8"
C L "atoi" 10 397 1 "FUNCTION"
C L "atoi" 10 397 1 "FUNCTION"
C L "atoi" 10 397 1 "FUNCTION"
C L "atoi" 10 397 1 "FUNCTION"
C L "atoi" 10 397 1 "FUNCTION"
C L "atoi" 10 397 1 "FUNCTION"
V L "s" 10 498 "*int8"
F G "atol" 10 498 "sint16(*int8 s)"
V L "result" 10 500 "sint16"
V L "sign" 10 501 "int8"
V L "base" 10 501 "int8"
V L "index" 10 501 "int8"
V L "c" 10 502 "int8"
C L "atol" 10 397 1 "FUNCTION"
C L "atol" 10 397 1 "FUNCTION"
C L "atol" 10 397 1 "FUNCTION"
C L "atol" 10 397 1 "FUNCTION"
C L "mult_with10" 10 397 1 "FUNCTION"
V L "num" 10 565 "int32"
F G "mult_with10" 10 565 "sint32(int32 num)"
V L "s" 10 571 "*int8"
F G "atoi32" 10 571 "sint32(*int8 s)"
V L "result" 10 573 "sint32"
V L "sign" 10 574 "int8"
V L "base" 10 574 "int8"
V L "index" 10 574 "int8"
V L "c" 10 575 "int8"
C L "atoi32" 10 397 1 "FUNCTION"
C L "atoi32" 10 397 1 "FUNCTION"
C L "atoi32" 10 397 1 "FUNCTION"
C L "atoi32" 10 397 1 "FUNCTION"
C L "atoi32" 10 397 1 "FUNCTION"
V L "num" 10 770 "sint32"
V L "base" 10 770 "int8"
V L "s" 10 770 "*int8"
F G "itoa" 10 770 "*int8(sint32 num,int8 base,*int8 s)"
V L "temp" 10 772 "int32"
V L "i" 10 773 "int8"
V L "sign" 10 773 "int8"
V L "cnt" 10 773 "int8"
V L "c" 10 774 "int8"
C L "itoa" 10 397 1 "FUNCTION"
C L "itoa" 10 397 1 "FUNCTION"
C L "itoa" 10 397 1 "FUNCTION"
C L "itoa" 10 397 1 "FUNCTION"
C L "itoa" 10 397 1 "FUNCTION"
V L "s" 10 807 "*int8"
V L "endptr" 10 807 "*int8"
F G "strtof" 10 807 "float(*int8 s,*int8 endptr)"
V L "pow10" 10 809 "float"
V L "result" 10 810 "float"
V L "skip" 10 811 "int1"
V L "sign" 10 811 "int1"
V L "point" 10 811 "int1"
V L "c" 10 812 "int8"
V L "ptr" 10 813 "int8"
V L "s" 10 1025 "*int8"
V L "endptr" 10 1025 "*int8"
V L "base" 10 1025 "sint8"
F G "strtoul" 10 1025 "int16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 10 1027 "*int8"
V L "s1" 10 1027 "*int8"
V L "sd" 10 1027 "*int8"
V L "x" 10 1028 "int16"
V L "sign" 10 1029 "int8"
V L "digits" 10 1030 "int8[1]"
C L "strtoul" 10 397 1 "FUNCTION"
C L "strtoul" 10 397 1 "FUNCTION"
C L "strtoul" 10 397 1 "FUNCTION"
V L "s" 10 1087 "*int8"
V L "endptr" 10 1087 "*int8"
V L "base" 10 1087 "sint8"
F G "strtol" 10 1087 "sint16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 10 1089 "*int8"
V L "s1" 10 1089 "*int8"
V L "sd" 10 1089 "*int8"
V L "x" 10 1090 "sint16"
V L "sign" 10 1091 "int8"
V L "digits" 10 1092 "int8[1]"
C L "strtol" 10 397 1 "FUNCTION"
C L "strtol" 10 397 1 "FUNCTION"
C L "strtol" 10 397 1 "FUNCTION"
V L "string" 10 1150 "*int8"
F G "system" 10 1150 "sint8(*int8 string)"
V L "s" 10 1155 "*int8"
V L "n" 10 1155 "int16"
F G "mblen" 10 1155 "int8(*int8 s,int16 n)"
V L "pwc" 10 1160 "*int8"
V L "s" 10 1160 "*int8"
V L "n" 10 1160 "int16"
F G "mbtowc" 10 1160 "int8(*int8 pwc,*int8 s,int16 n)"
V L "s" 10 1166 "*int8"
V L "wchar" 10 1166 "int8"
F G "wctomb" 10 1166 "int8(*int8 s,int8 wchar)"
V L "pwcs" 10 1172 "*int8"
V L "s" 10 1172 "*int8"
V L "n" 10 1172 "int16"
F G "mbstowcs" 10 1172 "int16(*int8 pwcs,*int8 s,int16 n)"
V L "s" 10 1178 "*int8"
V L "pwcs" 10 1178 "*int8"
V L "n" 10 1178 "int16"
F G "wcstombs" 10 1178 "int16(*int8 s,*int8 pwcs,int16 n)"
V G "_Randseed" 10 1188 "int32"
F G "rand" 10 1190 "int16()"
V L "seed" 10 1196 "int32"
F G "srand" 10 1196 "void(int32 seed)"
V L "p1" 10 1206 "*int8"
V L "p2" 10 1206 "*int8"
T G "*_Cmpfun" 10 1206 "sint8(*int8 p1,*int8 p2)"
V L "qdata" 10 1213 "*int8"
V L "qitems" 10 1213 "int8"
V L "qsize" 10 1213 "int8"
V L "cmp" 10 1213 "_Cmpfun"
F G "qsort" 10 1213 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)"
V L "m" 10 1214 "int8"
V L "j" 10 1214 "int8"
V L "i" 10 1214 "int8"
V L "l" 10 1214 "int8"
V L "done" 10 1215 "int1"
V L "t" 10 1216 "int8[16]"
V L "key" 10 1241 "*int8"
V L "base" 10 1241 "*int8"
V L "num" 10 1241 "int16"
V L "width" 10 1241 "int16"
V L "cmp" 10 1241 "_Cmpfun"
F G "bsearch" 10 1241 "*int8(*int8 key,*int8 base,int16 num,int16 width,_Cmpfun cmp)"
V L "p" 10 1243 "*int8"
V L "q" 10 1243 "*int8"
V L "n" 10 1244 "int16"
V L "pivot" 10 1245 "int16"
V L "val" 10 1246 "sint8"
C L "bsearch" 10 397 1 "FUNCTION"
D G "key_size" 0 61 "128"
D G "Nk" 0 70 " (key_size / 32)"
D G "Nr" 0 72 " (Nk + 6)"
C L "KeyExpansion" 0 56 1 "FUNCTION"
F G "KeyExpansion" 0 75 "void()" "This function adds the round key to state."
C L "KeyExpansion" 0 56 1 "FUNCTION"
V L "round" 0 78 "int8"
F G "AddRoundKey" 0 78 "void(int8 round)" "Cipher is the main function that encrypts the PlainText."
F G "Cipher" 0 80 "void()" "InvCipher is the main function that decrypts the CipherText."
F G "InvCipher" 0 82 "void()" "MixColumns function mixes the columns of the state matrix."
F G "InvMixColumns" 0 84 "void()"
F G "MixColumns" 0 85 "void()"
F G "ShiftRows" 0 86 "void()"
F G "SubBytes" 0 87 "void()"
F G "InvShiftRows" 0 88 "void()"
V L "num" 0 89 "int8"
F G "getS" 0 89 "int8(int8 num)"
V G "sbox" 0 91 "int8[256]" "0     1    2      3     4    5     6     7      8    9     A      B    C     D     E     F"
C L "getS" 0 56 1 "FUNCTION"
C L "getS" 0 56 1 "FUNCTION"
C L "getS" 0 56 1 "FUNCTION"
C L "getS" 0 56 1 "FUNCTION"
C L "getS" 0 56 1 "FUNCTION"
C L "getS" 0 56 1 "FUNCTION"
C L "getS" 0 56 1 "FUNCTION"
C L "getS" 0 56 1 "FUNCTION"
C L "getS" 0 56 1 "FUNCTION"
C L "getS" 0 56 1 "FUNCTION"
C L "getS" 0 56 1 "FUNCTION"
C L "getS" 0 56 1 "FUNCTION"
C L "getS" 0 56 1 "FUNCTION"
C L "getS" 0 56 1 "FUNCTION"
C L "getS" 0 56 1 "FUNCTION"
V G "Roundcon" 0 112 "int8[255]"
C L "getS" 0 56 1 "FUNCTION"
V G "rsbox" 0 134 "int8[256]"
D G "Nb" 0 154 "4"
C L "getS" 0 56 3 "FUNCTION"
V G "in" 0 159 "int8[16]"
V G "out" 0 160 "int8[16]"
V G "state" 0 160 "int8[4][4]" "The array that stores the round keys."
V G "RoundKey" 0 163 "int8[176]" "The Key input to the AES Program"
V G "key" 0 166 "int8[16]"
D G "getSBoxValue" 0 169 "(num)                sbox[num]"
D G "getSBoxInvert" 0 170 "(num)                rsbox[num]"
V L "num" 0 173 "int8"
F G "getS" 0 173 "int8(int8 num)"
C L "KeyExpansion" 0 56 4 "FUNCTION"
F G "KeyExpansion" 0 184 "void(int8 num)"
V L "i" 0 186 "int8"
V L "j" 0 186 "int8"
V L "temp" 0 187 "int8[4]"
V L "k" 0 187 "int8" "The first round key is the key itself."
C L "KeyExpansion" 0 56 1 "FUNCTION"
C L "KeyExpansion" 0 56 3 "FUNCTION"
C L "KeyExpansion" 0 56 3 "FUNCTION"
C L "KeyExpansion" 0 56 1 "FUNCTION"
C L "AddRoundKey" 0 56 2 "FUNCTION"
V L "round" 0 252 "int8"
F G "AddRoundKey" 0 252 "void(int8 round)"
V L "i" 0 254 "int8"
V L "j" 0 254 "int8"
C L "SubBytes" 0 56 2 "FUNCTION"
F G "SubBytes" 0 266 "void()"
V L "i" 0 268 "int8"
V L "j" 0 268 "int8"
C L "ShiftRows" 0 56 3 "FUNCTION"
F G "ShiftRows" 0 282 "void()"
V L "temp" 0 284 "int8" "Rotate first row 1 columns to left"
C L "ShiftRows" 0 56 1 "FUNCTION"
C L "ShiftRows" 0 56 1 "FUNCTION"
D G "xtime" 0 311 "(x)   ((x<<1) ^ ((x>>7) * 0x1b))"
C L "MixColumns" 0 56 5 "FUNCTION"
F G "MixColumns" 0 322 "void()"
V L "i" 0 324 "int8"
V L "Tmp" 0 325 "int8"
V L "Tm" 0 325 "int8"
V L "t" 0 325 "int8"
C L "Cipher" 0 56 1 "FUNCTION"
F G "Cipher" 0 352 "void()"
V L "i" 0 354 "int8"
V L "j" 0 354 "int8"
V L "round" 0 354 "int8"
C L "Cipher" 0 56 1 "FUNCTION"
C L "Cipher" 0 365 1 "*"
C L "Cipher" 0 365 2 "FUNCTION"
C L "Cipher" 0 365 3 "FUNCTION"
C L "Cipher" 0 365 1 "FUNCTION"
C L "Cipher" 0 380 1 "*"
C L "Cipher" 0 380 2 "FUNCTION"
C L "Cipher" 0 380 2 "FUNCTION"
C L "InvSubBytes" 0 380 2 "FUNCTION"
F G "InvSubBytes" 0 408 "void()"
V L "i" 0 410 "int8"
V L "j" 0 410 "int8"
C L "Multiply" 0 380 2 "FUNCTION"
V L "x" 0 425 "int8"
V L "y" 0 425 "int8"
F G "Multiply" 0 425 "int8(int8 x,int8 y)"
V L "result" 0 426 "int8"
C L "Multiply" 0 380 5 "FUNCTION"
C L "Multiply" 0 380 1 "FUNCTION"
C L "Multiply" 0 380 2 "FUNCTION"
C L "InvMixColumns" 0 380 3 "FUNCTION"
F G "InvMixColumns" 0 454 "void()"
V L "i" 0 456 "int8"
V L "a" 0 457 "int8"
V L "b" 0 457 "int8"
V L "c" 0 457 "int8"
V L "d" 0 457 "int8"
C L "InvShiftRows" 0 380 3 "FUNCTION"
F G "InvShiftRows" 0 477 "void()"
V L "temp" 0 479 "int8" "Rotate first row 1 columns to right"
C L "InvShiftRows" 0 380 1 "FUNCTION"
C L "InvShiftRows" 0 380 1 "FUNCTION"
C L "InvCipher" 0 380 1 "FUNCTION"
F G "InvCipher" 0 507 "void()"
V L "i" 0 509 "int8"
V L "j" 0 509 "int8"
V L "round" 0 509 "int8" "Copy the input CipherText to state array."
C L "InvCipher" 0 380 1 "FUNCTION"
C L "InvCipher" 0 380 3 "FUNCTION"
C L "InvCipher" 0 380 2 "FUNCTION"
C L "InvCipher" 0 380 2 "FUNCTION"
C L "convertdigit" 0 553 2 "*"
V L "digit" 0 556 "int8"
F G "convertdigit" 0 556 "int8(int8 digit)"
V L "value" 0 558 "int8"
C L "setkey" 0 614 1 "*"
F G "setkey" 0 615 "void()" "Here we set the Key (128 bit key / 16 bytes) in a loop"
C L "setkey" 0 614 1 "FUNCTION"
V L "i" 0 619 "int8"
C L "MAIN" 0 625 1 "*"
F G "MAIN" 0 627 "void()" "arrays and variables"
V L "in" 0 631 "int8[16]" "space for the plain text"
V L "out" 0 632 "int8[16]" "space for the cipher text"
V L "key" 0 633 "int8[16]" "space for the key"
V L "buffer" 0 634 "int8[33]" "space to read the ascii characters coming through the serial in"
V L "hex" 0 635 "int8[2]" "space for keeping hexadecimal ascii representation of an 8 bit number"
V L "i" 0 636 "int8"
V L "temp" 0 637 "int8"
C L "MAIN" 0 625 1 "FUNCTION"
C L "MAIN" 0 625 1 "FUNCTION"
C L "MAIN" 0 625 1 "FUNCTION"
C L "MAIN" 0 625 1 "FUNCTION"
C L "MAIN" 0 625 1 "FUNCTION"
C L "MAIN" 0 625 1 "FUNCTION"
C L "MAIN" 0 625 2 "FUNCTION"
C L "MAIN" 0 625 1 "FUNCTION"
C L "MAIN" 0 625 2 "FUNCTION"
C L "MAIN" 0 625 1 "FUNCTION"
C L "MAIN" 0 625 1 "FUNCTION"
C L "MAIN" 0 625 1 "FUNCTION"
C L "MAIN" 0 625 1 "FUNCTION"
C L "MAIN" 0 625 1 "FUNCTION"
C L "MAIN" 0 625 1 "FUNCTION"
C L "MAIN" 0 625 1 "FUNCTION"
C L "MAIN" 0 625 1 "FUNCTION"
C L "MAIN" 0 625 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 1
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_e" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 2
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 1 2
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "brownout_enable" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
